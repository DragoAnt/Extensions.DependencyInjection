// This file generated by DragoAnt.Extensions.DependencyInjection source generator.
// More details: https://github.com/DragoAnt/Extensions.DependencyInjection



#nullable enable

using DragoAnt.Extensions.DependencyInjection.Example.Models;
using Microsoft.Extensions.DependencyInjection;
using System;
using static Microsoft.Extensions.DependencyInjection.ServiceLifetime;

[assembly:ResolveAssembly("TestAssembly.TestAssemblyDependencyExtensions.AddTestAssemblyDependencies")]

namespace TestAssembly;

/// <summary>
/// Dependency injection registration extensions.
/// </summary>
public static partial class TestAssemblyDependencyExtensions
{
    /// <summary>
    /// AddTestAssemblyDependencies dependencies and factories registration extension.
    /// </summary>
    /// <remarks>Generated by <a href="https://github.com/DragoAnt/Extensions.DependencyInjection">DragoAnt.Extensions.DependencyInjection</a> source generator.</remarks>
    public static void AddTestAssemblyDependencies(this IServiceCollection services)
    {

        services.Add(new ServiceDescriptor(typeof(IInternalViewModelFactory), typeof(InternalViewModelFactory), Scoped));

        services.Add(new ServiceDescriptor(typeof(IPublicViewModelFactory), typeof(PublicViewModelFactory), Scoped));
    }

}

/// <summary>
/// Factory contract for <see cref="InternalViewModel"/>.
/// </summary>
internal interface IInternalViewModelFactory
{
    InternalViewModel Create(string test);
}

/// <summary>
/// Factory implementation for <see cref="InternalViewModel"/>.
/// </summary>
internal sealed class InternalViewModelFactory : IInternalViewModelFactory
{
    private readonly IServiceProvider _provider;

    public InternalViewModelFactory(IServiceProvider provider)
    {
        _provider = provider;        
    }

    InternalViewModel IInternalViewModelFactory.Create(string test) 
         => new InternalViewModel(test);
}

/// <summary>
/// Factory contract for <see cref="PublicViewModel"/>.
/// </summary>
public interface IPublicViewModelFactory
{
    PublicViewModel Create(string test);
}

/// <summary>
/// Factory implementation for <see cref="PublicViewModel"/>.
/// </summary>
internal sealed class PublicViewModelFactory : IPublicViewModelFactory
{
    private readonly IServiceProvider _provider;

    public PublicViewModelFactory(IServiceProvider provider)
    {
        _provider = provider;        
    }

    PublicViewModel IPublicViewModelFactory.Create(string test) 
         => new PublicViewModel(test);
}
